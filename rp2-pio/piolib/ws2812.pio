.program ws2812_led

public entry_point:
	pull
	set x, 23 ; Loop over 24 bits

; In bitloop we have 3 unavoidable instructions during high cycle
; This means 3 cycles == t0h, we then use t0h as a multiple 
; to reach all other timings.
; t1h is 3*t0h, so 9 PIO cycles.
bitloop:
	set pins, 1  ; Drive pin high
	out y, 1 ; Shift 1 bit out, and write it to y
	jmp !y skip  ; Skip the extra delay if the bit was 0
	nop [5]      ; Here we finish t1h with 6 cycles reaching 9 total.

; tld is 3.28571*t0h, so approximately 10 PIO cycles.
; tll is 17.14*t0h, so approx 52 cycles.
skip:
	set pins, 0 [9] 
	jmp x-- bitloop ; Jump if x nonzero, and decrement x
	nop [31] ; +32, need to still add 52-32
	nop [19] ; +20, 52 cycles reached so color should be latched.
	jmp entry_point


% go {
//go:build rp2040
package piolib

import (
    pio "github.com/tinygo-org/pio/rp2-pio"
)
%}